name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
    
    - name: Install Zig
      if: matrix.target == 'x86_64-pc-windows-gnu'
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.11.0
    
    - name: Install cargo-zigbuild
      if: matrix.target == 'x86_64-pc-windows-gnu'
      run: cargo install cargo-zigbuild

    - name: Setup cross-compilation environment
      if: matrix.target == 'x86_64-pc-windows-gnu'
      run: |
        C:\msys64\usr\bin\pacman.exe -S --noconfirm mingw-w64-x86_64-toolchain mingw-w64-x86_64-dav1d mingw-w64-x86_64-pkg-config
        echo "PKG_CONFIG_PATH=C:\msys64\mingw64\lib\pkgconfig" >> $env:GITHUB_ENV
        echo "PKG_CONFIG=C:\msys64\mingw64\bin\pkg-config.exe" >> $env:GITHUB_ENV
        echo "PKG_CONFIG_ALLOW_CROSS=1" >> $env:GITHUB_ENV
        echo "C:\msys64\mingw64\bin" >> $env:GITHUB_PATH

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev pkg-config libdav1d-dev libc++-dev libc++abi-dev

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install dav1d


    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Run tests
      run: cargo test --verbose ${{ matrix.target && format('--target {0}', matrix.target) || '' }}

    - name: Run clippy
      run: cargo clippy ${{ matrix.target && format('--target {0}', matrix.target) || '' }} -- -D warnings

    - name: Check formatting
      run: cargo fmt --all -- --check

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        target: ${{ matrix.target }}
    
    - name: Install Zig
      if: matrix.target == 'x86_64-pc-windows-gnu'
      uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.11.0
    
    - name: Install cargo-zigbuild
      if: matrix.target == 'x86_64-pc-windows-gnu'
      run: cargo install cargo-zigbuild

    - name: Setup cross-compilation environment
      if: matrix.target == 'x86_64-pc-windows-gnu'
      run: |
        C:\msys64\usr\bin\pacman.exe -S --noconfirm mingw-w64-x86_64-toolchain mingw-w64-x86_64-dav1d mingw-w64-x86_64-pkg-config
        echo "PKG_CONFIG_PATH=C:\msys64\mingw64\lib\pkgconfig" >> $env:GITHUB_ENV
        echo "PKG_CONFIG=C:\msys64\mingw64\bin\pkg-config.exe" >> $env:GITHUB_ENV
        echo "PKG_CONFIG_ALLOW_CROSS=1" >> $env:GITHUB_ENV
        echo "C:\msys64\mingw64\bin" >> $env:GITHUB_PATH

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev pkg-config libdav1d-dev libc++-dev libc++abi-dev

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install dav1d


    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-
          ${{ runner.os }}-cargo-

    - name: Build (debug)
      run: ${{ matrix.target == 'x86_64-pc-windows-gnu' && 'cargo zigbuild --target x86_64-pc-windows-gnu --verbose' || format('cargo build --verbose {0}', matrix.target && format('--target {0}', matrix.target) || '') }}

    - name: Build (release)
      run: ${{ matrix.target == 'x86_64-pc-windows-gnu' && 'cargo zigbuild --target x86_64-pc-windows-gnu --release --verbose' || format('cargo build --release --verbose {0}', matrix.target && format('--target {0}', matrix.target) || '') }}